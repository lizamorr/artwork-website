{"ast":null,"code":"var _jsxFileName = \"/Users/liza/Documents/GitHub/artwork-website/art/src/Gallery/PhotoGallery.tsx\";\nimport React, { Component } from 'react';\nimport Lightbox from 'react-images';\nimport Image from './Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PhotoGallery extends Component {\n  componentDidMount() {\n    this.setState({\n      images: this.props.images,\n      thumbnails: [],\n      lightboxIsOpen: this.props.isOpen,\n      currentImage: this.props.currentImage,\n      containerWidth: 0\n    });\n    this.onResize();\n  }\n\n  componentWillReceiveProps(np) {\n    if (this.state.currentImage > np.images.length - 1) {\n      this.setState({\n        currentImage: np.images.length - 1\n      });\n    }\n\n    if (this.state.images !== np.images || this.props.maxRows !== np.maxRows) {\n      this.setState({\n        images: np.images,\n        thumbnails: this.renderThumbs(this._gallery.clientWidth, np.images)\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this._gallery) return;\n\n    if (this._gallery.clientWidth !== this.state.containerWidth) {\n      this.onResize();\n    }\n  }\n\n  onResize() {\n    if (!this._gallery) return;\n    this.setState({\n      containerWidth: Math.floor(this._gallery.clientWidth),\n      thumbnails: this.renderThumbs(this._gallery.clientWidth)\n    });\n  }\n\n  openLightbox(index, event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (this.props.lightboxWillOpen) {\n      this.props.lightboxWillOpen.call(this, index);\n    }\n\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, index);\n    }\n\n    this.setState({\n      currentImage: index,\n      lightboxIsOpen: true\n    });\n  }\n\n  closeLightbox() {\n    if (this.props.lightboxWillClose) {\n      this.props.lightboxWillClose.call(this);\n    }\n\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, 0);\n    }\n\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false\n    });\n  }\n\n  gotoPrevious() {\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, this.state.currentImage - 1);\n    }\n\n    this.setState({\n      currentImage: this.state.currentImage - 1\n    });\n  }\n\n  gotoNext() {\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, this.state.currentImage + 1);\n    }\n\n    this.setState({\n      currentImage: this.state.currentImage + 1\n    });\n  }\n\n  onClickImage() {\n    if (this.state.currentImage === this.props.images.length - 1) return;\n    this.gotoNext();\n  }\n\n  onSelectImage(index, event) {\n    event.preventDefault();\n    if (this.props.onSelectImage) this.props.onSelectImage.call(this, index, this.state.images[index]);\n  }\n\n  gotoImage(index) {\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, index);\n    }\n\n    this.setState({\n      currentImage: index\n    });\n  }\n\n  getOnClickThumbnailFn() {\n    if (!this.props.onClickThumbnail && this.props.enableLightbox) return this.openLightbox;\n    if (this.props.onClickThumbnail) return this.props.onClickThumbnail;\n    return null;\n  }\n\n  getOnClickLightboxThumbnailFn() {\n    if (!this.props.onClickLightboxThumbnail && this.props.showLightboxThumbnails) return this.gotoImage;\n    if (this.props.onClickLightboxThumbnail && this.props.showLightboxThumbnails) return this.props.onClickLightboxThumbnail;\n    return null;\n  }\n\n  getOnClickImageFn() {\n    if (this.props.onClickImage) return this.props.onClickImage;\n    return this.onClickImage;\n  }\n\n  getOnClickPrevFn() {\n    if (this.props.onClickPrev) return this.props.onClickPrev;\n    return this.gotoPrevious;\n  }\n\n  getOnClickNextFn() {\n    if (this.props.onClickNext) return this.props.onClickNext;\n    return this.gotoNext;\n  }\n\n  calculateCutOff(len, delta, items) {\n    var cutoff = [];\n    var cutsum = 0;\n\n    for (var i in items) {\n      var item = items[i];\n      var fractOfLen = item.scaletwidth / len;\n      cutoff[i] = Math.floor(fractOfLen * delta);\n      cutsum += cutoff[i];\n    }\n\n    var stillToCutOff = delta - cutsum;\n\n    while (stillToCutOff > 0) {\n      for (i in cutoff) {\n        cutoff[i]++;\n        stillToCutOff--;\n        if (stillToCutOff < 0) break;\n      }\n    }\n\n    return cutoff;\n  }\n\n  buildImageRow(items, containerWidth) {\n    var row = [];\n    var len = 0;\n    var imgMargin = 2 * this.props.margin;\n\n    while (items.length > 0 && len < containerWidth) {\n      var item = items.shift();\n      row.push(item);\n      len += item.scaletwidth + imgMargin;\n    }\n\n    var delta = len - containerWidth;\n\n    if (row.length > 0 && delta > 0) {\n      var cutoff = this.calculateCutOff(len, delta, row);\n\n      for (var i in row) {\n        var pixelsToRemove = cutoff[i];\n        item = row[i];\n        item.marginLeft = -Math.abs(Math.floor(pixelsToRemove / 2));\n        item.vwidth = item.scaletwidth - pixelsToRemove;\n      }\n    } else {\n      for (var j in row) {\n        item = row[j];\n        item.marginLeft = 0;\n        item.vwidth = item.scaletwidth;\n      }\n    }\n\n    return row;\n  }\n\n  setThumbScale(item) {\n    item.scaletwidth = Math.floor(this.props.rowHeight * (item.thumbnailWidth / item.thumbnailHeight));\n  }\n\n  renderThumbs(containerWidth, images = this.state.images) {\n    if (!images) return [];\n    if (containerWidth === 0) return [];\n    var items = images.slice();\n\n    for (var t in items) {\n      this.setThumbScale(items[t]);\n    }\n\n    var thumbs = [];\n    var rows = [];\n\n    while (items.length > 0) {\n      rows.push(this.buildImageRow(items, containerWidth));\n    }\n\n    for (var r in rows) {\n      for (var i in rows[r]) {\n        var item = rows[r][i];\n\n        if (this.props.maxRows) {\n          if (r < this.props.maxRows) {\n            thumbs.push(item);\n          }\n        } else {\n          thumbs.push(item);\n        }\n      }\n    }\n\n    return thumbs;\n  }\n\n  render() {\n    var images = this.state.thumbnails.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(Image, {\n        item: item,\n        index: idx,\n        margin: this.props.margin,\n        height: this.props.rowHeight,\n        isSelectable: this.props.enableImageSelection,\n        onClick: this.getOnClickThumbnailFn(),\n        onSelectImage: this.onSelectImage,\n        tagStyle: this.props.tagStyle,\n        tileViewportStyle: this.props.tileViewportStyle,\n        thumbnailStyle: this.props.thumbnailStyle,\n        thumbnailImageComponent: this.props.thumbnailImageComponent\n      }, 'Image-' + idx + '-' + item.src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this);\n    });\n    var resizeIframeStyles = {\n      height: 0,\n      margin: 0,\n      padding: 0,\n      overflow: 'hidden',\n      borderWidth: 0,\n      position: 'fixed',\n      backgroundColor: 'transparent',\n      width: '100%'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"ReactGridGallery\",\n      ref: c => this._gallery = c,\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        style: resizeIframeStyles,\n        ref: c => c && c.contentWindow && c.contentWindow.addEventListener('resize', this.onResize)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), images, /*#__PURE__*/_jsxDEV(Lightbox, {\n        images: this.props.images,\n        backdropClosesModal: this.props.backdropClosesModal,\n        currentImage: this.state.currentImage,\n        preloadNextImage: this.props.preloadNextImage,\n        customControls: this.props.customControls,\n        enableKeyboardInput: this.props.enableKeyboardInput,\n        imageCountSeparator: this.props.imageCountSeparator,\n        isOpen: this.state.lightboxIsOpen,\n        onClickImage: this.getOnClickImageFn(),\n        onClickNext: this.getOnClickNextFn(),\n        onClickPrev: this.getOnClickPrevFn(),\n        showCloseButton: this.props.showCloseButton,\n        showImageCount: this.props.showImageCount,\n        onClose: this.closeLightbox,\n        width: this.props.lightboxWidth,\n        theme: this.props.theme,\n        onClickThumbnail: this.getOnClickLightboxThumbnailFn(),\n        showThumbnails: this.props.showLightboxThumbnails,\n        ...this.props.lightBoxProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PhotoGallery;","map":{"version":3,"sources":["/Users/liza/Documents/GitHub/artwork-website/art/src/Gallery/PhotoGallery.tsx"],"names":["React","Component","Lightbox","Image","PhotoGallery","componentDidMount","setState","images","props","thumbnails","lightboxIsOpen","isOpen","currentImage","containerWidth","onResize","componentWillReceiveProps","np","state","length","maxRows","renderThumbs","_gallery","clientWidth","componentDidUpdate","Math","floor","openLightbox","index","event","preventDefault","lightboxWillOpen","call","currentImageWillChange","closeLightbox","lightboxWillClose","gotoPrevious","gotoNext","onClickImage","onSelectImage","gotoImage","getOnClickThumbnailFn","onClickThumbnail","enableLightbox","getOnClickLightboxThumbnailFn","onClickLightboxThumbnail","showLightboxThumbnails","getOnClickImageFn","getOnClickPrevFn","onClickPrev","getOnClickNextFn","onClickNext","calculateCutOff","len","delta","items","cutoff","cutsum","i","item","fractOfLen","scaletwidth","stillToCutOff","buildImageRow","row","imgMargin","margin","shift","push","pixelsToRemove","marginLeft","abs","vwidth","j","setThumbScale","rowHeight","thumbnailWidth","thumbnailHeight","slice","t","thumbs","rows","r","render","map","idx","enableImageSelection","tagStyle","tileViewportStyle","thumbnailStyle","thumbnailImageComponent","src","resizeIframeStyles","height","padding","overflow","borderWidth","position","backgroundColor","width","id","c","contentWindow","addEventListener","backdropClosesModal","preloadNextImage","customControls","enableKeyboardInput","imageCountSeparator","showCloseButton","showImageCount","lightboxWidth","theme","lightBoxProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Lightbox from 'react-images';\nimport Image from './Image';\n\nexport interface IImageOptions {\n  src: string;\n  thumbnail: string;\n  thumbnailWidth: number;\n  thumbnailHeight: number;\n  thumbnailCaption?: number;\n  tags?: [{ value: string; title: string }];\n  isSelected?: boolean;\n  caption?: string;\n  srcSet?: string[];\n  customOverlay?: any;\n  orientation?: number;\n}\n\ninterface IPhotoGalleryProps {\n  images: IImageOptions[];\n  id?: string;\n  enableImageSelection?: boolean;\n  onSelectImage?: () => void;\n  rowHeight?: number;\n  maxRows?: number;\n  margin?: number;\n  onClickThumbnail?: () => void;\n  lightboxWillOpen?: () => void;\n  lightboxWillClose?: () => void;\n  enableLightbox?: boolean;\n  backdropClosesModal?: boolean;\n  currentImage?: number;\n  preloadNextImage?: boolean;\n  customControls?: [];\n  currentImageWillChange?: () => void;\n  enableKeyboardInput?: boolean;\n  imageCountSeparator?: string;\n  isOpen?: boolean;\n  onClickImage?: () => void;\n  onClickNext?: () => void;\n  onClickPrev?: () => void;\n  onClose?: () => void;\n  showCloseButton?: boolean;\n  showImageCount?: boolean;\n  lightboxWidth?: number;\n  tileViewportStyle?: () => void;\n  thumbnailStyle?: () => void;\n  showLightboxThumbnails?: boolean;\n  onClickLightboxThumbnail?: () => void;\n  tagStyle?: {};\n  thumbnailImageComponent?: () => void;\n  lightBoxProps?: {};\n}\n\ninterface IPhotoGalleryState {\n  images: IImageOptions[];\n  thumbnails: [];\n  lightboxIsOpen: boolean;\n  currentImage: number;\n  containerWidth: number;\n}\n\nclass PhotoGallery extends Component<IPhotoGalleryProps, IPhotoGalleryState> {\n  public componentDidMount() {\n    this.setState({\n      images: this.props.images,\n      thumbnails: [],\n      lightboxIsOpen: this.props.isOpen,\n      currentImage: this.props.currentImage,\n      containerWidth: 0,\n    });\n    this.onResize();\n  }\n\n  public componentWillReceiveProps(np) {\n    if (this.state.currentImage > np.images.length - 1) {\n      this.setState({ currentImage: np.images.length - 1 });\n    }\n    if (this.state.images !== np.images || this.props.maxRows !== np.maxRows) {\n      this.setState({\n        images: np.images,\n        thumbnails: this.renderThumbs(this._gallery.clientWidth, np.images),\n      });\n    }\n  }\n\n  public componentDidUpdate() {\n    if (!this._gallery) return;\n    if (this._gallery.clientWidth !== this.state.containerWidth) {\n      this.onResize();\n    }\n  }\n\n  public onResize() {\n    if (!this._gallery) return;\n    this.setState({\n      containerWidth: Math.floor(this._gallery.clientWidth),\n      thumbnails: this.renderThumbs(this._gallery.clientWidth),\n    });\n  }\n\n  public openLightbox(index, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.props.lightboxWillOpen) {\n      this.props.lightboxWillOpen.call(this, index);\n    }\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, index);\n    }\n\n    this.setState({\n      currentImage: index,\n      lightboxIsOpen: true,\n    });\n  }\n\n  public closeLightbox() {\n    if (this.props.lightboxWillClose) {\n      this.props.lightboxWillClose.call(this);\n    }\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, 0);\n    }\n\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false,\n    });\n  }\n\n  public gotoPrevious() {\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, this.state.currentImage - 1);\n    }\n    this.setState({\n      currentImage: this.state.currentImage - 1,\n    });\n  }\n\n  public gotoNext() {\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, this.state.currentImage + 1);\n    }\n    this.setState({\n      currentImage: this.state.currentImage + 1,\n    });\n  }\n\n  public onClickImage() {\n    if (this.state.currentImage === this.props.images.length - 1) return;\n    this.gotoNext();\n  }\n\n  public onSelectImage(index, event) {\n    event.preventDefault();\n    if (this.props.onSelectImage)\n      this.props.onSelectImage.call(this, index, this.state.images[index]);\n  }\n\n  public gotoImage(index) {\n    if (this.props.currentImageWillChange) {\n      this.props.currentImageWillChange.call(this, index);\n    }\n    this.setState({\n      currentImage: index,\n    });\n  }\n\n  public getOnClickThumbnailFn() {\n    if (!this.props.onClickThumbnail && this.props.enableLightbox)\n      return this.openLightbox;\n    if (this.props.onClickThumbnail) return this.props.onClickThumbnail;\n    return null;\n  }\n\n  public getOnClickLightboxThumbnailFn() {\n    if (\n      !this.props.onClickLightboxThumbnail &&\n      this.props.showLightboxThumbnails\n    )\n      return this.gotoImage;\n    if (\n      this.props.onClickLightboxThumbnail &&\n      this.props.showLightboxThumbnails\n    )\n      return this.props.onClickLightboxThumbnail;\n    return null;\n  }\n\n  public getOnClickImageFn() {\n    if (this.props.onClickImage) return this.props.onClickImage;\n    return this.onClickImage;\n  }\n\n  public getOnClickPrevFn() {\n    if (this.props.onClickPrev) return this.props.onClickPrev;\n    return this.gotoPrevious;\n  }\n\n  public getOnClickNextFn() {\n    if (this.props.onClickNext) return this.props.onClickNext;\n    return this.gotoNext;\n  }\n\n  public calculateCutOff(len, delta, items) {\n    var cutoff = [];\n    var cutsum = 0;\n    for (var i in items) {\n      var item = items[i];\n      var fractOfLen = item.scaletwidth / len;\n      cutoff[i] = Math.floor(fractOfLen * delta);\n      cutsum += cutoff[i];\n    }\n\n    var stillToCutOff = delta - cutsum;\n    while (stillToCutOff > 0) {\n      for (i in cutoff) {\n        cutoff[i]++;\n        stillToCutOff--;\n        if (stillToCutOff < 0) break;\n      }\n    }\n    return cutoff;\n  }\n\n  public buildImageRow(items, containerWidth) {\n    var row = [];\n    var len = 0;\n    var imgMargin = 2 * this.props.margin;\n    while (items.length > 0 && len < containerWidth) {\n      var item = items.shift();\n      row.push(item);\n      len += item.scaletwidth + imgMargin;\n    }\n\n    var delta = len - containerWidth;\n    if (row.length > 0 && delta > 0) {\n      var cutoff = this.calculateCutOff(len, delta, row);\n      for (var i in row) {\n        var pixelsToRemove = cutoff[i];\n        item = row[i];\n        item.marginLeft = -Math.abs(Math.floor(pixelsToRemove / 2));\n        item.vwidth = item.scaletwidth - pixelsToRemove;\n      }\n    } else {\n      for (var j in row) {\n        item = row[j];\n        item.marginLeft = 0;\n        item.vwidth = item.scaletwidth;\n      }\n    }\n    return row;\n  }\n\n  public setThumbScale(item) {\n    item.scaletwidth = Math.floor(\n      this.props.rowHeight * (item.thumbnailWidth / item.thumbnailHeight)\n    );\n  }\n\n  public renderThumbs(containerWidth, images = this.state.images) {\n    if (!images) return [];\n    if (containerWidth === 0) return [];\n\n    var items = images.slice();\n    for (var t in items) {\n      this.setThumbScale(items[t]);\n    }\n\n    var thumbs = [];\n    var rows = [];\n    while (items.length > 0) {\n      rows.push(this.buildImageRow(items, containerWidth));\n    }\n\n    for (var r in rows) {\n      for (var i in rows[r]) {\n        var item = rows[r][i];\n        if (this.props.maxRows) {\n          if (r < this.props.maxRows) {\n            thumbs.push(item);\n          }\n        } else {\n          thumbs.push(item);\n        }\n      }\n    }\n    return thumbs;\n  }\n\n  render() {\n    var images = this.state.thumbnails.map((item, idx) => {\n      return (\n        <Image\n          key={'Image-' + idx + '-' + item.src}\n          item={item}\n          index={idx}\n          margin={this.props.margin}\n          height={this.props.rowHeight}\n          isSelectable={this.props.enableImageSelection}\n          onClick={this.getOnClickThumbnailFn()}\n          onSelectImage={this.onSelectImage}\n          tagStyle={this.props.tagStyle}\n          tileViewportStyle={this.props.tileViewportStyle}\n          thumbnailStyle={this.props.thumbnailStyle}\n          thumbnailImageComponent={this.props.thumbnailImageComponent}\n        />\n      );\n    });\n    var resizeIframeStyles = {\n      height: 0,\n      margin: 0,\n      padding: 0,\n      overflow: 'hidden',\n      borderWidth: 0,\n      position: 'fixed',\n      backgroundColor: 'transparent',\n      width: '100%',\n    };\n    return (\n      <div\n        id={this.props.id}\n        className=\"ReactGridGallery\"\n        ref={(c) => (this._gallery = c)}\n      >\n        <iframe\n          style={resizeIframeStyles}\n          ref={(c) =>\n            c &&\n            c.contentWindow &&\n            c.contentWindow.addEventListener('resize', this.onResize)\n          }\n        />\n        {images}\n        <Lightbox\n          images={this.props.images}\n          backdropClosesModal={this.props.backdropClosesModal}\n          currentImage={this.state.currentImage}\n          preloadNextImage={this.props.preloadNextImage}\n          customControls={this.props.customControls}\n          enableKeyboardInput={this.props.enableKeyboardInput}\n          imageCountSeparator={this.props.imageCountSeparator}\n          isOpen={this.state.lightboxIsOpen}\n          onClickImage={this.getOnClickImageFn()}\n          onClickNext={this.getOnClickNextFn()}\n          onClickPrev={this.getOnClickPrevFn()}\n          showCloseButton={this.props.showCloseButton}\n          showImageCount={this.props.showImageCount}\n          onClose={this.closeLightbox}\n          width={this.props.lightboxWidth}\n          theme={this.props.theme}\n          onClickThumbnail={this.getOnClickLightboxThumbnailFn()}\n          showThumbnails={this.props.showLightboxThumbnails}\n          {...this.props.lightBoxProps}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PhotoGallery;\n"]},"metadata":{},"sourceType":"module"}