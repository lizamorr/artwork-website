{"ast":null,"code":"var _jsxFileName = \"/Users/liza/Documents/GitHub/artwork-website/art/src/Gallery/Gallery.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { imageGroups } from './GalleryImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Gallery = () => {\n  _s();\n\n  const [imgGroups, setImageGroups] = useState(imageGroups);\n  const [isScrollBtnDisplayed, setIsScrollBtnDisplayed] = useState(false);\n  const singleImagePerGroup = imageGroups.filter(imgGroup => imgGroup.length === 1);\n  const multipleImagesPerGroup = imageGroups.filter(imgGroup => imgGroup.length > 1);\n\n  const scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n    setIsScrollBtnDisplayed(false);\n  };\n\n  const showScrollToTop = () => {\n    setIsScrollBtnDisplayed(true);\n  };\n\n  window.onscroll = () => {\n    if ((document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) && !isScrollBtnDisplayed) showScrollToTop();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isScrollBtnDisplayed && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scroll-btn\",\n      className: \"scroll-btn\",\n      onClick: () => scrollToTop(),\n      children: \"Top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setImageGroups(imgGroups.filter(imgGroup => imgGroup.filter(img => img.id.includes('drawing')))),\n          children: \"Drawings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setImageGroups(imgGroups.filter(imgGroup => imgGroup.filter(img => img.id.includes('painting')))),\n          children: \"Paintings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setImageGroups(imgGroups.filter(imgGroup => imgGroup.filter(img => img.id.includes('print')))),\n          children: \"Prints\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => imgGroups.filter(imgGroup => imgGroup.filter(img => img.id.includes('misc'))),\n          children: \"Misc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), singleImagePerGroup.map((photo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: photo[0].src,\n          alt: photo[0].alt,\n          id: photo[0].id,\n          style: {\n            maxWidth: photo[0].maxWidth,\n            width: '100%',\n            height: 'auto'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: photo[0].maxWidth\n          },\n          className: \"photo-desc\",\n          children: photo[0].desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"wOZYxMSBRr4nQeov8sdXqIjPDm0=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/liza/Documents/GitHub/artwork-website/art/src/Gallery/Gallery.tsx"],"names":["React","useState","imageGroups","Gallery","imgGroups","setImageGroups","isScrollBtnDisplayed","setIsScrollBtnDisplayed","singleImagePerGroup","filter","imgGroup","length","multipleImagesPerGroup","scrollToTop","document","body","scrollTop","documentElement","showScrollToTop","window","onscroll","img","id","includes","map","photo","index","src","alt","maxWidth","width","height","desc"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { imageGroups } from './GalleryImages';\n\nconst Gallery: React.FC = () => {\n  const [imgGroups, setImageGroups] = useState(imageGroups);\n  const [isScrollBtnDisplayed, setIsScrollBtnDisplayed] = useState(false);\n\n  const singleImagePerGroup = imageGroups.filter(\n    (imgGroup) => imgGroup.length === 1\n  );\n  const multipleImagesPerGroup = imageGroups.filter(\n    (imgGroup) => imgGroup.length > 1\n  );\n\n  const scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n    setIsScrollBtnDisplayed(false);\n  };\n  const showScrollToTop = () => {\n    setIsScrollBtnDisplayed(true);\n  };\n  window.onscroll = () => {\n    if (\n      (document.body.scrollTop > 20 ||\n        document.documentElement.scrollTop > 20) &&\n      !isScrollBtnDisplayed\n    )\n      showScrollToTop();\n  };\n\n  return (\n    <>\n      {isScrollBtnDisplayed && (\n        <div\n          id=\"scroll-btn\"\n          className=\"scroll-btn\"\n          onClick={() => scrollToTop()}\n        >\n          Top\n        </div>\n      )}\n      <div className=\"gallery-grid\">\n        <div className=\"gallery-type\">\n          <span\n            onClick={() =>\n              setImageGroups(\n                imgGroups.filter((imgGroup) =>\n                  imgGroup.filter((img) => img.id.includes('drawing'))\n                )\n              )\n            }\n          >\n            Drawings\n          </span>\n          <span\n            onClick={() =>\n              setImageGroups(\n                imgGroups.filter((imgGroup) =>\n                  imgGroup.filter((img) => img.id.includes('painting'))\n                )\n              )\n            }\n          >\n            Paintings\n          </span>\n          <span\n            onClick={() =>\n              setImageGroups(\n                imgGroups.filter((imgGroup) =>\n                  imgGroup.filter((img) => img.id.includes('print'))\n                )\n              )\n            }\n          >\n            Prints\n          </span>\n          <span\n            onClick={() =>\n              imgGroups.filter((imgGroup) =>\n                imgGroup.filter((img) => img.id.includes('misc'))\n              )\n            }\n          >\n            Misc\n          </span>\n        </div>\n        {singleImagePerGroup.map((photo, index) => (\n          <div className=\"photo-item\" key={index}>\n            <img\n              src={photo[0].src}\n              alt={photo[0].alt}\n              key={index}\n              id={photo[0].id}\n              style={{\n                maxWidth: photo[0].maxWidth,\n                width: '100%',\n                height: 'auto',\n              }}\n            />\n            <div style={{ width: photo[0].maxWidth }} className=\"photo-desc\">\n              {photo[0].desc}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}