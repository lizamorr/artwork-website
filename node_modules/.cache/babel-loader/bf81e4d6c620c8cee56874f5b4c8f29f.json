{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i['return']) _i['return']();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError('Invalid attempt to destructure non-iterable instance');\n    }\n  };\n}();\n\nvar _util = require('./util');\n\nvar _inject = require('./inject');\n\nvar StyleSheet = {\n  create: function create(sheetDefinition) {\n    return (0, _util.mapObj)(sheetDefinition, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var key = _ref2[0];\n      var val = _ref2[1];\n      return [key, {\n        // TODO(emily): Make a 'production' mode which doesn't prepend\n        // the class name here, to make the generated CSS smaller.\n        _name: key + '_' + (0, _util.hashObject)(val),\n        _definition: val\n      }];\n    });\n  },\n  rehydrate: function rehydrate() {\n    var renderedClassNames = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n    (0, _inject.addRenderedClassNames)(renderedClassNames);\n  }\n};\n/**\n * Utilities for using Aphrodite server-side.\n */\n\nvar StyleSheetServer = {\n  renderStatic: function renderStatic(renderFunc) {\n    (0, _inject.reset)();\n    (0, _inject.startBuffering)();\n    var html = renderFunc();\n    var cssContent = (0, _inject.flushToString)();\n    return {\n      html: html,\n      css: {\n        content: cssContent,\n        renderedClassNames: (0, _inject.getRenderedClassNames)()\n      }\n    };\n  }\n};\n/**\n * Utilities for using Aphrodite in tests.\n *\n * Not meant to be used in production.\n */\n\nvar StyleSheetTestUtils = {\n  /**\n   * Prevent styles from being injected into the DOM.\n   *\n   * This is useful in situations where you'd like to test rendering UI\n   * components which use Aphrodite without any of the side-effects of\n   * Aphrodite happening. Particularly useful for testing the output of\n   * components when you have no DOM, e.g. testing in Node without a fake DOM.\n   *\n   * Should be paired with a subsequent call to\n   * clearBufferAndResumeStyleInjection.\n   */\n  suppressStyleInjection: function suppressStyleInjection() {\n    (0, _inject.reset)();\n    (0, _inject.startBuffering)();\n  },\n\n  /**\n   * Opposite method of preventStyleInject.\n   */\n  clearBufferAndResumeStyleInjection: function clearBufferAndResumeStyleInjection() {\n    (0, _inject.reset)();\n  }\n};\n\nvar css = function css() {\n  for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {\n    styleDefinitions[_key] = arguments[_key];\n  }\n\n  var useImportant = true; // Append !important to all style definitions\n\n  return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions);\n};\n\nexports['default'] = {\n  StyleSheet: StyleSheet,\n  StyleSheetServer: StyleSheetServer,\n  StyleSheetTestUtils: StyleSheetTestUtils,\n  css: css\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/liza/Documents/GitHub/artwork-website/art/node_modules/aphrodite/lib/index.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_util","require","_inject","StyleSheet","create","sheetDefinition","mapObj","_ref","_ref2","key","val","_name","hashObject","_definition","rehydrate","renderedClassNames","arguments","addRenderedClassNames","StyleSheetServer","renderStatic","renderFunc","reset","startBuffering","html","cssContent","flushToString","css","content","getRenderedClassNames","StyleSheetTestUtils","suppressStyleInjection","clearBufferAndResumeStyleInjection","_len","styleDefinitions","_key","useImportant","injectAndGetClassName","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIA,IAAIC,cAAc,GAAI,YAAY;AAAE,WAASC,aAAT,CAAuBC,GAAvB,EAA4BC,CAA5B,EAA+B;AAAE,QAAIC,IAAI,GAAG,EAAX;AAAe,QAAIC,EAAE,GAAG,IAAT;AAAe,QAAIC,EAAE,GAAG,KAAT;AAAgB,QAAIC,EAAE,GAAGC,SAAT;;AAAoB,QAAI;AAAE,WAAK,IAAIC,EAAE,GAAGP,GAAG,CAACQ,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCC,EAAtC,EAA0C,EAAEP,EAAE,GAAG,CAACO,EAAE,GAAGH,EAAE,CAACI,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyET,EAAE,GAAG,IAA9E,EAAoF;AAAED,QAAAA,IAAI,CAACW,IAAL,CAAUH,EAAE,CAACb,KAAb;;AAAqB,YAAII,CAAC,IAAIC,IAAI,CAACY,MAAL,KAAgBb,CAAzB,EAA4B;AAAQ;AAAE,KAAvJ,CAAwJ,OAAOc,GAAP,EAAY;AAAEX,MAAAA,EAAE,GAAG,IAAL;AAAWC,MAAAA,EAAE,GAAGU,GAAL;AAAW,KAA5L,SAAqM;AAAE,UAAI;AAAE,YAAI,CAACZ,EAAD,IAAOI,EAAE,CAAC,QAAD,CAAb,EAAyBA,EAAE,CAAC,QAAD,CAAF;AAAiB,OAAhD,SAAyD;AAAE,YAAIH,EAAJ,EAAQ,MAAMC,EAAN;AAAW;AAAE;;AAAC,WAAOH,IAAP;AAAc;;AAAC,SAAO,UAAUF,GAAV,EAAeC,CAAf,EAAkB;AAAE,QAAIe,KAAK,CAACC,OAAN,CAAcjB,GAAd,CAAJ,EAAwB;AAAE,aAAOA,GAAP;AAAa,KAAvC,MAA6C,IAAIQ,MAAM,CAACC,QAAP,IAAmBf,MAAM,CAACM,GAAD,CAA7B,EAAoC;AAAE,aAAOD,aAAa,CAACC,GAAD,EAAMC,CAAN,CAApB;AAA+B,KAArE,MAA2E;AAAE,YAAM,IAAIiB,SAAJ,CAAc,sDAAd,CAAN;AAA8E;AAAE,GAArO;AAAwO,CAAjoB,EAArB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AAEA,IAAIE,UAAU,GAAG;AACbC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,eAAhB,EAAiC;AACrC,WAAO,CAAC,GAAGL,KAAK,CAACM,MAAV,EAAkBD,eAAlB,EAAmC,UAAUE,IAAV,EAAgB;AACtD,UAAIC,KAAK,GAAG7B,cAAc,CAAC4B,IAAD,EAAO,CAAP,CAA1B;;AAEA,UAAIE,GAAG,GAAGD,KAAK,CAAC,CAAD,CAAf;AACA,UAAIE,GAAG,GAAGF,KAAK,CAAC,CAAD,CAAf;AAEA,aAAO,CAACC,GAAD,EAAM;AACT;AACA;AACAE,QAAAA,KAAK,EAAEF,GAAG,GAAG,GAAN,GAAY,CAAC,GAAGT,KAAK,CAACY,UAAV,EAAsBF,GAAtB,CAHV;AAITG,QAAAA,WAAW,EAAEH;AAJJ,OAAN,CAAP;AAMH,KAZM,CAAP;AAaH,GAfY;AAiBbI,EAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC5B,QAAIC,kBAAkB,GAAGC,SAAS,CAACrB,MAAV,IAAoB,CAApB,IAAyBqB,SAAS,CAAC,CAAD,CAAT,KAAiB7B,SAA1C,GAAsD,EAAtD,GAA2D6B,SAAS,CAAC,CAAD,CAA7F;AAEA,KAAC,GAAGd,OAAO,CAACe,qBAAZ,EAAmCF,kBAAnC;AACH;AArBY,CAAjB;AAwBA;AACA;AACA;;AACA,IAAIG,gBAAgB,GAAG;AACnBC,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,UAAtB,EAAkC;AAC5C,KAAC,GAAGlB,OAAO,CAACmB,KAAZ;AACA,KAAC,GAAGnB,OAAO,CAACoB,cAAZ;AACA,QAAIC,IAAI,GAAGH,UAAU,EAArB;AACA,QAAII,UAAU,GAAG,CAAC,GAAGtB,OAAO,CAACuB,aAAZ,GAAjB;AAEA,WAAO;AACHF,MAAAA,IAAI,EAAEA,IADH;AAEHG,MAAAA,GAAG,EAAE;AACDC,QAAAA,OAAO,EAAEH,UADR;AAEDT,QAAAA,kBAAkB,EAAE,CAAC,GAAGb,OAAO,CAAC0B,qBAAZ;AAFnB;AAFF,KAAP;AAOH;AAdkB,CAAvB;AAiBA;AACA;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB,GAAG;AACtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,sBAAsB,EAAE,SAASA,sBAAT,GAAkC;AACtD,KAAC,GAAG5B,OAAO,CAACmB,KAAZ;AACA,KAAC,GAAGnB,OAAO,CAACoB,cAAZ;AACH,GAfqB;;AAiBtB;AACJ;AACA;AACIS,EAAAA,kCAAkC,EAAE,SAASA,kCAAT,GAA8C;AAC9E,KAAC,GAAG7B,OAAO,CAACmB,KAAZ;AACH;AAtBqB,CAA1B;;AAyBA,IAAIK,GAAG,GAAG,SAASA,GAAT,GAAe;AACrB,OAAK,IAAIM,IAAI,GAAGhB,SAAS,CAACrB,MAArB,EAA6BsC,gBAAgB,GAAGpC,KAAK,CAACmC,IAAD,CAArD,EAA6DE,IAAI,GAAG,CAAzE,EAA4EA,IAAI,GAAGF,IAAnF,EAAyFE,IAAI,EAA7F,EAAiG;AAC7FD,IAAAA,gBAAgB,CAACC,IAAD,CAAhB,GAAyBlB,SAAS,CAACkB,IAAD,CAAlC;AACH;;AAED,MAAIC,YAAY,GAAG,IAAnB,CALqB,CAKI;;AACzB,SAAO,CAAC,GAAGjC,OAAO,CAACkC,qBAAZ,EAAmCD,YAAnC,EAAiDF,gBAAjD,CAAP;AACH,CAPD;;AASAxD,OAAO,CAAC,SAAD,CAAP,GAAqB;AACjB0B,EAAAA,UAAU,EAAEA,UADK;AAEjBe,EAAAA,gBAAgB,EAAEA,gBAFD;AAGjBW,EAAAA,mBAAmB,EAAEA,mBAHJ;AAIjBH,EAAAA,GAAG,EAAEA;AAJY,CAArB;AAMAW,MAAM,CAAC5D,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _util = require('./util');\n\nvar _inject = require('./inject');\n\nvar StyleSheet = {\n    create: function create(sheetDefinition) {\n        return (0, _util.mapObj)(sheetDefinition, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2);\n\n            var key = _ref2[0];\n            var val = _ref2[1];\n\n            return [key, {\n                // TODO(emily): Make a 'production' mode which doesn't prepend\n                // the class name here, to make the generated CSS smaller.\n                _name: key + '_' + (0, _util.hashObject)(val),\n                _definition: val\n            }];\n        });\n    },\n\n    rehydrate: function rehydrate() {\n        var renderedClassNames = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n        (0, _inject.addRenderedClassNames)(renderedClassNames);\n    }\n};\n\n/**\n * Utilities for using Aphrodite server-side.\n */\nvar StyleSheetServer = {\n    renderStatic: function renderStatic(renderFunc) {\n        (0, _inject.reset)();\n        (0, _inject.startBuffering)();\n        var html = renderFunc();\n        var cssContent = (0, _inject.flushToString)();\n\n        return {\n            html: html,\n            css: {\n                content: cssContent,\n                renderedClassNames: (0, _inject.getRenderedClassNames)()\n            }\n        };\n    }\n};\n\n/**\n * Utilities for using Aphrodite in tests.\n *\n * Not meant to be used in production.\n */\nvar StyleSheetTestUtils = {\n    /**\n     * Prevent styles from being injected into the DOM.\n     *\n     * This is useful in situations where you'd like to test rendering UI\n     * components which use Aphrodite without any of the side-effects of\n     * Aphrodite happening. Particularly useful for testing the output of\n     * components when you have no DOM, e.g. testing in Node without a fake DOM.\n     *\n     * Should be paired with a subsequent call to\n     * clearBufferAndResumeStyleInjection.\n     */\n    suppressStyleInjection: function suppressStyleInjection() {\n        (0, _inject.reset)();\n        (0, _inject.startBuffering)();\n    },\n\n    /**\n     * Opposite method of preventStyleInject.\n     */\n    clearBufferAndResumeStyleInjection: function clearBufferAndResumeStyleInjection() {\n        (0, _inject.reset)();\n    }\n};\n\nvar css = function css() {\n    for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {\n        styleDefinitions[_key] = arguments[_key];\n    }\n\n    var useImportant = true; // Append !important to all style definitions\n    return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions);\n};\n\nexports['default'] = {\n    StyleSheet: StyleSheet,\n    StyleSheetServer: StyleSheetServer,\n    StyleSheetTestUtils: StyleSheetTestUtils,\n    css: css\n};\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}