{"ast":null,"code":"var _jsxFileName = \"/Users/liza/Documents/GitHub/artwork-website/art/src/Gallery/Image.tsx\";\nimport React, { Component } from 'react';\nimport CheckButton from './CheckButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Image extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.tagStyle = () => {\n      return this.props.tagStyle ? this.props.tagStyle : {\n        display: 'inline',\n        padding: '.2em .6em .3em',\n        fontSize: '75%',\n        fontWeight: '600',\n        lineHeight: '1',\n        color: 'yellow',\n        background: 'rgba(0,0,0,0.65)',\n        textAlign: 'center',\n        whiteSpace: 'nowrap',\n        verticalAlign: 'baseline',\n        borderRadius: '.25em'\n      };\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      hover: false\n    });\n  }\n\n  tileViewportStyle() {\n    if (this.props.tileViewportStyle) return this.props.tileViewportStyle.call(this);\n    var nanoBase64Backgorund = {};\n\n    if (this.props.item.nano) {\n      nanoBase64Backgorund = {\n        background: `url(${this.props.item.nano})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center center'\n      };\n    }\n\n    if (this.props.item.isSelected) return Object.assign({\n      width: this.props.item.vwidth - 32,\n      height: this.props.height - 32,\n      margin: 16,\n      overflow: 'hidden'\n    }, nanoBase64Backgorund);\n    return Object.assign({\n      width: this.props.item.vwidth,\n      height: this.props.height,\n      overflow: 'hidden'\n    }, nanoBase64Backgorund);\n  }\n\n  thumbnailStyle() {\n    if (this.props.thumbnailStyle) return this.props.thumbnailStyle.call(this);\n    var rotationTransformValue = undefined;\n\n    switch (this.props.item.orientation) {\n      case 3:\n        rotationTransformValue = 'rotate(180deg)';\n        break;\n\n      case 6:\n        rotationTransformValue = 'rotate(90deg)';\n        break;\n\n      case 8:\n        rotationTransformValue = 'rotate(270deg)';\n        break;\n\n      case 2:\n        rotationTransformValue = 'rotateY(180deg)';\n        break;\n\n      case 4:\n        rotationTransformValue = 'rotate(180deg) rotateY(180deg)';\n        break;\n\n      case 5:\n        rotationTransformValue = 'rotate(270deg) rotateY(180deg)';\n        break;\n\n      case 7:\n        rotationTransformValue = 'rotate(90deg) rotateY(180deg)';\n        break;\n    }\n\n    if (this.props.item.isSelected) {\n      var ratio = this.props.item.scaletwidth / this.props.height;\n      var height = 0;\n      var width = 0;\n      var viewportHeight = this.props.height - 32;\n      var viewportWidth = this.props.item.vwidth - 32;\n\n      if (this.props.item.scaletwidth > this.props.height) {\n        width = this.props.item.scaletwidth - 32;\n        height = Math.floor(width / ratio);\n      } else {\n        height = this.props.height - 32;\n        width = Math.floor(height * ratio);\n      }\n\n      var marginTop = -Math.abs(Math.floor((viewportHeight - height) / 2));\n      var marginLeft = -Math.abs(Math.floor((viewportWidth - width) / 2));\n      return {\n        cursor: 'pointer',\n        width: width,\n        height: height,\n        marginLeft: marginLeft,\n        marginTop: marginTop,\n        transform: rotationTransformValue\n      };\n    }\n\n    return {\n      cursor: 'pointer',\n      width: this.props.item.scaletwidth,\n      height: this.props.height,\n      marginLeft: this.props.item.marginLeft,\n      marginTop: 0,\n      transform: rotationTransformValue\n    };\n  }\n\n  renderCheckButton() {\n    return /*#__PURE__*/_jsxDEV(CheckButton, {\n      index: this.props.index,\n      color: 'rgba(255, 255, 255, 0.7)',\n      selectedColor: '#4285f4',\n      hoverColor: 'rgba(255, 255, 255, 1)',\n      isSelected: this.props.item.isSelected,\n      isSelectable: this.props.isSelectable,\n      onClick: this.props.isSelectable ? e => this.props.onSelectImage(this.props.index, e) : null,\n      parentHover: this.state.hover\n    }, \"Select\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    var alt = this.props.item.alt ? this.props.item.alt : '';\n    var tags = typeof this.props.item.tags === 'undefined' ? /*#__PURE__*/_jsxDEV(\"noscript\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this) : this.props.item.tags.map(tag => {\n      const key = tag.key || (typeof tag.value === 'string' ? tag.value : null) || tag.title;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        title: tag.title,\n        style: {\n          display: 'inline-block',\n          cursor: 'pointer',\n          pointerEvents: 'visible',\n          margin: '2px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: this.tagStyle(),\n          children: tag.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)\n      }, 'tag-' + key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this);\n    });\n    var customOverlay = typeof this.props.item.customOverlay === 'undefined' ? /*#__PURE__*/_jsxDEV(\"noscript\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReactGridGallery_custom-overlay\",\n      style: {\n        pointerEvents: 'none',\n        opacity: this.state.hover ? 1 : 0,\n        position: 'absolute',\n        height: '100%',\n        width: '100%'\n      },\n      children: this.props.item.customOverlay\n    }, 'custom-overlay-' + this.props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this);\n    var thumbnailProps = {\n      key: 'img-' + this.props.index,\n      src: this.props.item.thumbnail,\n      alt: alt,\n      title: typeof this.props.item.caption === 'string' ? this.props.item.caption : null,\n      style: this.thumbnailStyle()\n    };\n    var ThumbnailImageComponent = this.props.thumbnailImageComponent;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReactGridGallery_tile\",\n      onMouseEnter: e => this.setState({\n        hover: true\n      }),\n      onMouseLeave: e => this.setState({\n        hover: false\n      }),\n      style: {\n        margin: this.props.margin,\n        WebkitUserSelect: 'none',\n        position: 'relative',\n        float: 'left',\n        background: '#eee',\n        padding: '0px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ReactGridGallery_tile-icon-bar\",\n        style: {\n          pointerEvents: 'none',\n          opacity: 1,\n          position: 'absolute',\n          height: '36px',\n          width: '100%'\n        },\n        children: this.renderCheckButton()\n      }, 'tile-icon-bar-' + this.props.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ReactGridGallery_tile-bottom-bar\",\n        style: {\n          padding: '2px',\n          pointerEvents: 'none',\n          position: 'absolute',\n          minHeight: '0px',\n          maxHeight: '160px',\n          width: '100%',\n          bottom: '0px',\n          overflow: 'hidden'\n        },\n        children: tags\n      }, 'tile-bottom-bar-' + this.props.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), customOverlay, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ReactGridGallery_tile-overlay\",\n        style: {\n          pointerEvents: 'none',\n          opacity: 1,\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          background: this.state.hover && !this.props.item.isSelected && this.props.isSelectable ? 'linear-gradient(to bottom,rgba(0,0,0,0.26),transparent 56px,transparent)' : 'none'\n        }\n      }, 'tile-overlay-' + this.props.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ReactGridGallery_tile-viewport\",\n        style: this.tileViewportStyle(),\n        onClick: this.props.onClick ? e => this.props.onClick(this.props.index, e) : null,\n        children: ThumbnailImageComponent ? /*#__PURE__*/_jsxDEV(ThumbnailImageComponent, { ...this.props,\n          imageProps: thumbnailProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", { ...thumbnailProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)\n      }, 'tile-viewport-' + this.props.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), this.props.item.thumbnailCaption && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ReactGridGallery_tile-description\",\n        style: {\n          background: 'white',\n          height: '100%',\n          width: '100%',\n          margin: 0,\n          userSelect: 'text',\n          WebkitUserSelect: 'text',\n          MozUserSelect: 'text',\n          overflow: 'hidden'\n        },\n        children: this.props.item.thumbnailCaption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, 'tile-' + this.props.index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Image;","map":{"version":3,"sources":["/Users/liza/Documents/GitHub/artwork-website/art/src/Gallery/Image.tsx"],"names":["React","Component","CheckButton","Image","tagStyle","props","display","padding","fontSize","fontWeight","lineHeight","color","background","textAlign","whiteSpace","verticalAlign","borderRadius","componentDidMount","setState","hover","tileViewportStyle","call","nanoBase64Backgorund","item","nano","backgroundSize","backgroundPosition","isSelected","Object","assign","width","vwidth","height","margin","overflow","thumbnailStyle","rotationTransformValue","undefined","orientation","ratio","scaletwidth","viewportHeight","viewportWidth","Math","floor","marginTop","abs","marginLeft","cursor","transform","renderCheckButton","index","isSelectable","e","onSelectImage","state","render","alt","tags","map","tag","key","value","title","pointerEvents","customOverlay","opacity","position","thumbnailProps","src","thumbnail","caption","style","ThumbnailImageComponent","thumbnailImageComponent","WebkitUserSelect","float","minHeight","maxHeight","bottom","onClick","thumbnailCaption","userSelect","MozUserSelect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CheckButton from './CheckButton.js';\n\ninterface IImageProps {\n  item: {\n    nano: number;\n    isSelected: boolean;\n    vwidth: number;\n    orientation: number;\n    scaletwidth: number;\n    marginLeft: number;\n    marginRight: number;\n    customOverlay: string;\n    alt: string;\n    tags: [{ value: string; title: string; key: number }];\n    thumbnail: string;\n    caption: string;\n    thumbnailCaption: string;\n  };\n  index: number;\n  margin: number;\n  height: number;\n  isSelectable: boolean;\n  onClick: (index: number, event: MouseEvent) => void;\n  onSelectImage: (index: number, event: MouseEvent) => void;\n  tileViewportStyle: (width: number, height: number, overflow: string) => void;\n  thumbnailStyle: () => void;\n  tagStyle: object;\n  customOverlay: Element;\n  thumbnailImageComponent: () => void;\n}\n\ninterface IImageState {\n  hover: boolean;\n}\n\nclass Image extends Component<IImageProps, IImageState> {\n  public componentDidMount() {\n    this.setState({ hover: false });\n  }\n\n  public tagStyle = () => {\n    return this.props.tagStyle\n      ? this.props.tagStyle\n      : {\n          display: 'inline',\n          padding: '.2em .6em .3em',\n          fontSize: '75%',\n          fontWeight: '600',\n          lineHeight: '1',\n          color: 'yellow',\n          background: 'rgba(0,0,0,0.65)',\n          textAlign: 'center',\n          whiteSpace: 'nowrap',\n          verticalAlign: 'baseline',\n          borderRadius: '.25em',\n        };\n  };\n\n  public tileViewportStyle() {\n    if (this.props.tileViewportStyle)\n      return this.props.tileViewportStyle.call(this);\n    var nanoBase64Backgorund = {};\n    if (this.props.item.nano) {\n      nanoBase64Backgorund = {\n        background: `url(${this.props.item.nano})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center center',\n      };\n    }\n    if (this.props.item.isSelected)\n      return Object.assign(\n        {\n          width: this.props.item.vwidth - 32,\n          height: this.props.height - 32,\n          margin: 16,\n          overflow: 'hidden',\n        },\n        nanoBase64Backgorund\n      );\n    return Object.assign(\n      {\n        width: this.props.item.vwidth,\n        height: this.props.height,\n        overflow: 'hidden',\n      },\n      nanoBase64Backgorund\n    );\n  }\n\n  public thumbnailStyle() {\n    if (this.props.thumbnailStyle) return this.props.thumbnailStyle.call(this);\n\n    var rotationTransformValue = undefined;\n    switch (this.props.item.orientation) {\n      case 3:\n        rotationTransformValue = 'rotate(180deg)';\n        break;\n      case 6:\n        rotationTransformValue = 'rotate(90deg)';\n        break;\n      case 8:\n        rotationTransformValue = 'rotate(270deg)';\n        break;\n      case 2:\n        rotationTransformValue = 'rotateY(180deg)';\n        break;\n      case 4:\n        rotationTransformValue = 'rotate(180deg) rotateY(180deg)';\n        break;\n      case 5:\n        rotationTransformValue = 'rotate(270deg) rotateY(180deg)';\n        break;\n      case 7:\n        rotationTransformValue = 'rotate(90deg) rotateY(180deg)';\n        break;\n    }\n    if (this.props.item.isSelected) {\n      var ratio = this.props.item.scaletwidth / this.props.height;\n      var height = 0;\n      var width = 0;\n      var viewportHeight = this.props.height - 32;\n      var viewportWidth = this.props.item.vwidth - 32;\n\n      if (this.props.item.scaletwidth > this.props.height) {\n        width = this.props.item.scaletwidth - 32;\n        height = Math.floor(width / ratio);\n      } else {\n        height = this.props.height - 32;\n        width = Math.floor(height * ratio);\n      }\n\n      var marginTop = -Math.abs(Math.floor((viewportHeight - height) / 2));\n      var marginLeft = -Math.abs(Math.floor((viewportWidth - width) / 2));\n      return {\n        cursor: 'pointer',\n        width: width,\n        height: height,\n        marginLeft: marginLeft,\n        marginTop: marginTop,\n        transform: rotationTransformValue,\n      };\n    }\n    return {\n      cursor: 'pointer',\n      width: this.props.item.scaletwidth,\n      height: this.props.height,\n      marginLeft: this.props.item.marginLeft,\n      marginTop: 0,\n      transform: rotationTransformValue,\n    };\n  }\n\n  public renderCheckButton() {\n    return (\n      <CheckButton\n        key=\"Select\"\n        index={this.props.index}\n        color={'rgba(255, 255, 255, 0.7)'}\n        selectedColor={'#4285f4'}\n        hoverColor={'rgba(255, 255, 255, 1)'}\n        isSelected={this.props.item.isSelected}\n        isSelectable={this.props.isSelectable}\n        onClick={\n          this.props.isSelectable\n            ? (e: MouseEvent) => this.props.onSelectImage(this.props.index, e)\n            : null\n        }\n        parentHover={this.state.hover}\n      />\n    );\n  }\n\n  render() {\n    var alt = this.props.item.alt ? this.props.item.alt : '';\n    var tags =\n      typeof this.props.item.tags === 'undefined' ? (\n        <noscript />\n      ) : (\n        this.props.item.tags.map((tag) => {\n          const key =\n            tag.key ||\n            (typeof tag.value === 'string' ? tag.value : null) ||\n            tag.title;\n          return (\n            <div\n              title={tag.title}\n              key={'tag-' + key}\n              style={{\n                display: 'inline-block',\n                cursor: 'pointer',\n                pointerEvents: 'visible',\n                margin: '2px',\n              }}\n            >\n              <span style={this.tagStyle()}>{tag.value}</span>\n            </div>\n          );\n        })\n      );\n\n    var customOverlay =\n      typeof this.props.item.customOverlay === 'undefined' ? (\n        <noscript />\n      ) : (\n        <div\n          className=\"ReactGridGallery_custom-overlay\"\n          key={'custom-overlay-' + this.props.index}\n          style={{\n            pointerEvents: 'none',\n            opacity: this.state.hover ? 1 : 0,\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n          }}\n        >\n          {this.props.item.customOverlay}\n        </div>\n      );\n\n    var thumbnailProps = {\n      key: 'img-' + this.props.index,\n      src: this.props.item.thumbnail,\n      alt: alt,\n      title:\n        typeof this.props.item.caption === 'string'\n          ? this.props.item.caption\n          : null,\n      style: this.thumbnailStyle(),\n    };\n\n    var ThumbnailImageComponent = this.props.thumbnailImageComponent;\n\n    return (\n      <div\n        className=\"ReactGridGallery_tile\"\n        key={'tile-' + this.props.index}\n        onMouseEnter={(e) => this.setState({ hover: true })}\n        onMouseLeave={(e) => this.setState({ hover: false })}\n        style={{\n          margin: this.props.margin,\n          WebkitUserSelect: 'none',\n          position: 'relative',\n          float: 'left',\n          background: '#eee',\n          padding: '0px',\n        }}\n      >\n        <div\n          className=\"ReactGridGallery_tile-icon-bar\"\n          key={'tile-icon-bar-' + this.props.index}\n          style={{\n            pointerEvents: 'none',\n            opacity: 1,\n            position: 'absolute',\n            height: '36px',\n            width: '100%',\n          }}\n        >\n          {this.renderCheckButton()}\n        </div>\n\n        <div\n          className=\"ReactGridGallery_tile-bottom-bar\"\n          key={'tile-bottom-bar-' + this.props.index}\n          style={{\n            padding: '2px',\n            pointerEvents: 'none',\n            position: 'absolute',\n            minHeight: '0px',\n            maxHeight: '160px',\n            width: '100%',\n            bottom: '0px',\n            overflow: 'hidden',\n          }}\n        >\n          {tags}\n        </div>\n\n        {customOverlay}\n\n        <div\n          className=\"ReactGridGallery_tile-overlay\"\n          key={'tile-overlay-' + this.props.index}\n          style={{\n            pointerEvents: 'none',\n            opacity: 1,\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n            background:\n              this.state.hover &&\n              !this.props.item.isSelected &&\n              this.props.isSelectable\n                ? 'linear-gradient(to bottom,rgba(0,0,0,0.26),transparent 56px,transparent)'\n                : 'none',\n          }}\n        ></div>\n\n        <div\n          className=\"ReactGridGallery_tile-viewport\"\n          style={this.tileViewportStyle()}\n          key={'tile-viewport-' + this.props.index}\n          onClick={\n            this.props.onClick\n              ? (e) => this.props.onClick(this.props.index, e)\n              : null\n          }\n        >\n          {ThumbnailImageComponent ? (\n            <ThumbnailImageComponent\n              {...this.props}\n              imageProps={thumbnailProps}\n            />\n          ) : (\n            <img {...thumbnailProps} />\n          )}\n        </div>\n        {this.props.item.thumbnailCaption && (\n          <div\n            className=\"ReactGridGallery_tile-description\"\n            style={{\n              background: 'white',\n              height: '100%',\n              width: '100%',\n              margin: 0,\n              userSelect: 'text',\n              WebkitUserSelect: 'text',\n              MozUserSelect: 'text',\n              overflow: 'hidden',\n            }}\n          >\n            {this.props.item.thumbnailCaption}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}